{"version":3,"sources":["components/FollowButton/FollowButton.module.css","components/User/User.module.css","App.module.css","redux/reducers/index.js","redux/actions/types.js","redux/actions/index.js","components/Header/Header.js","components/Header/index.js","components/FollowButton/FollowButton.js","components/FollowButton/index.js","components/User/index.js","components/User/User.js","components/List/index.js","components/List/List.js","components/Follower/Follower.js","components/Follower/index.js","App.js","serviceWorker.js","index.js","localStorage.js"],"names":["module","exports","initialUserState","currentUser","currentUsersList","db","users","rootReducer","combineReducers","user","state","action","type","payload","usersList","setUser","setUsersList","Header","props","handleSighOut","handleSignIn","id","name","group_id","followers","this","onClick","Component","connect","FollowButton","followed","handleClick","push","setState","index","indexOf","splice","map","follower","buttonText","className","styles","following","follow","User","getGroup","groups","Object","values","group","info","length","List","getList","key","Follower","App","app","Boolean","window","location","hostname","match","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadCurrentUser","loadUsersList","store","createStore","composeWithDevTools","subscribe","stringify","setItem","console","log","saveCurrentUser","getState","saveUsersList","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.737be752.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"follow\":\"FollowButton_follow__zp-2V\",\"following\":\"FollowButton_following__3plRe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"User_info__fTEy8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1kX79\"};","import { combineReducers } from \"redux\";\nimport * as actionTypes from \"../actions/types\";\nimport db from \"../../db\";\n\nconst initialUserState = {\n  currentUser: null,\n  currentUsersList: db.users\n};\n\nconst user_reducer = (state = initialUserState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_USER:\n      return {\n        currentUser: action.payload.currentUser\n      };\n    default:\n      return state;\n  }\n};\n\nconst users_list_reducer = (state = initialUserState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_USERS_LIST:\n      return {\n        currentUsersList: action.payload.currentUsersList\n      };\n    default:\n      return state;\n  }\n};\n\nconst rootReducer = combineReducers({\n  user: user_reducer,\n  usersList: users_list_reducer\n});\n\nexport default rootReducer;\n","export const SET_USER = \"SET_USER\";\nexport const SET_USERS_LIST = \"SET_USERS_LIST\";\n","import * as actionTypes from \"./types\";\n\nexport const setUser = user => {\n  return {\n    type: actionTypes.SET_USER,\n    payload: {\n      currentUser: user\n    }\n  };\n};\n\nexport const setUsersList = user => {\n  return {\n    type: actionTypes.SET_USERS_LIST,\n    payload: {\n      currentUsersList: user\n    }\n  };\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setUser } from \"../../redux/actions\";\n\nclass Header extends Component {\n  state = {\n    currentUser: this.props.currentUser\n  };\n\n  handleSighOut = () => {\n    this.props.setUser(null);\n  };\n\n  handleSignIn = () => {\n    const firstUser = {\n      id: 1,\n      name: \"Dan\",\n      group_id: 1,\n      followers: []\n    };\n    this.props.setUser(firstUser);\n  };\n\n  render() {\n    return (\n      <div>\n        {this.props.currentUser ? (\n          <div>\n            welcome {this.props.currentUser.name}\n            <button onClick={this.handleSighOut}>Log out</button>\n          </div>\n        ) : (\n          <div>\n            {<div>Must be signed in</div>}\n            <button onClick={this.handleSignIn}>Log in as user1</button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { setUser }\n)(Header);\n","import Header from \"./Header\";\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport styles from \"./FollowButton.module.css\";\nimport connect from \"react-redux/es/connect/connect\";\nimport { setUsersList } from \"../../redux/actions\";\n\nclass FollowButton extends Component {\n  state = {\n    followed: false,\n    user: this.props.user,\n    currentUser: this.props.currentUser\n  };\n\n  componentDidMount() {\n    this.state.user.followers.map(follower => {\n      if (follower.name === this.props.currentUser.name) {\n        this.setState({ followed: true, buttonText: \"Following\" });\n      }\n    });\n  }\n\n  handleClick = () => {\n    const { followed, user, currentUser } = this.state;\n    if (followed === false) {\n      user.followers.push(currentUser);\n      this.props.setUsersList(this.props.currentUsersList);\n      this.setState({ followed: true });\n    } else {\n      let index = user.followers.indexOf(currentUser);\n      user.followers.splice(index, 1);\n      this.props.setUsersList(this.props.currentUsersList);\n      this.setState({ followed: false });\n    }\n  };\n\n  render() {\n    return (\n      <button\n        onClick={this.handleClick}\n        className={this.state.followed ? styles.following : styles.follow}\n      >\n      </button>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  currentUsersList: state.usersList.currentUsersList\n});\n\nexport default connect(\n  mapStateToProps,\n  { setUsersList }\n)(FollowButton);\n","import FollowButton from \"./FollowButton\";\n\nexport default FollowButton;\n","import User from \"./User\";\n\nexport default User;\n","import React, { Component } from \"react\";\nimport FollowButton from \"../FollowButton\";\nimport styles from \"./User.module.css\";\n\nclass User extends Component {\n  getGroup = (user, groups) => {\n    return Object.values(groups).map(group => {\n      if (group.id === user.group_id) {\n        return group.name;\n      }\n    });\n  };\n\n  render() {\n    const { user } = this.props;\n    if (user.name !== this.props.currentUser.name) {\n      return (\n        <div>\n          {user.name}\n          <span className={styles.info}> {(user.followers || []).length} </span>\n          <span className={styles.info}>\n            {\" \"}\n            {this.getGroup(user, this.props.groups)}{\" \"}\n          </span>\n          <FollowButton\n            users={this.props.users}\n            user={user}\n            currentUser={this.props.currentUser}\n          />\n        </div>\n      );\n    } else return null;\n  }\n}\n\nexport default User;\n","import List from \"./List\";\n\nexport default List;\n","import React, { Component } from \"react\";\nimport User from \"../User\";\n\nclass List extends Component {\n  state = {\n    currentUser: this.props.currentUser,\n    users: this.props.users,\n    groups: this.props.groups\n  };\n\n  getList = users => {\n    if (!users) {\n      return null;\n    }\n    return Object.values(this.props.users).map((user, index) => (\n      <User\n        key={index}\n        user={user}\n        currentUser={this.state.currentUser}\n        groups={this.state.groups}\n      />\n    ));\n  };\n\n  render() {\n    return (\n      <div>\n        Choose users to follow:\n        {this.getList(this.state.users)}\n      </div>\n    );\n  }\n}\n\nexport default List;\n","import React, { Component } from \"react\";\nimport Header from \"../Header\";\nimport List from \"../List\";\nimport db from \"../../db\";\nimport { connect } from \"react-redux\";\nimport { setUser, setUsersList } from \"../../redux/actions\";\n\nclass Follower extends Component {\n  render() {\n    return (\n      <div>\n        <Header currentUser={this.props.currentUser} />\n        {this.props.currentUser ? (\n          <List\n            users={this.props.usersList.currentUsersList}\n            groups={db.groups}\n            currentUser={this.props.currentUser}\n          />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  currentUser: state.user.currentUser,\n  usersList: state.usersList\n});\n\nexport default connect(\n  mapStateToProps,\n  { setUser, setUsersList }\n)(Follower);\n","import Follower from \"./Follower\";\n\nexport default Follower;\n","import React, { Component } from \"react\";\nimport styles from \"./App.module.css\";\nimport Follower from \"./components/Follower\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className={styles.app}>\n        <Follower />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from \"./redux/reducers\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport {\n  loadCurrentUser,\n  loadUsersList,\n  saveCurrentUser,\n  saveUsersList\n} from \"./localStorage\";\n\nconst persistedState = { user: loadCurrentUser(), usersList: loadUsersList() };\nconst store = createStore(rootReducer, persistedState, composeWithDevTools());\n\nstore.subscribe(() => {\n  saveCurrentUser(store.getState().user);\n  saveUsersList(store.getState().usersList);\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n","export const loadCurrentUser = () => {\n  try {\n    const serializedState = localStorage.getItem(\"currentUser\");\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveCurrentUser = state => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(\"currentUser\", serializedState);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const loadUsersList = () => {\n  try {\n    const serializedState = localStorage.getItem(\"usersList\");\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveUsersList = state => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(\"usersList\", serializedState);\n  } catch (err) {\n    console.log(err);\n  }\n};\n"],"sourceRoot":""}